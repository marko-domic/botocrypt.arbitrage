@startuml C4_Elements
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

!global $EXISTING_SYSTEM_BG_COLOR = "#999999"
!global $EXISTING_SYSTEM_BORDER_COLOR = "#8A8A8A"

!unquoted procedure System_Existing($alias, $label, $descr="", $sprite="", $tags="")
rectangle "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("external system", $tags) as $alias
!endprocedure

UpdateSkinparamsAndLegendEntry("external system", $bgColor=$EXISTING_SYSTEM_BG_COLOR, $fontColor=$COLOR_NEUTRAL, $borderColor=$EXISTING_SYSTEM_BORDER_COLOR)

System_Existing(exchanges, "Crypto Exchanges", "Supported exchanges: CEX.IO")
System_Boundary(c2, "Botocrypt Platform") {
    Container(aggregator, "Data Aggregator Service", "Spring Boot", "Collects cryptocurrency prices fetched from external crypto exchanges and forwards them to the arbitrage service")
    ContainerDb(dbAggregator, "Database", "MySQL", "Holds information about Botocrypt crypto pairs and exchanges", $sprite="mysql_server")
    Container(arbitrage, "Arbitrage Service", "Play framework with Akka", "Process cryptocurrency prices received from aggregator service and finds the best opportunities on the market")
    ContainerDb(db, "Database", "PostgreSQL", "Holds information about Botocrypt subscribers", $sprite="postgres_server")
}
Person(consumer, "Botocrypt subscriber", "User who is subscribed to Botocrypt platform")

Rel_U(aggregator, exchanges, "Fetch crypto prices from echanges", "HTTPS")
Rel_L(aggregator, dbAggregator, "Reads", "JDBC")
Rel_D(aggregator, arbitrage, "Forwards crypto info from exchanges", "gRPC")
Rel_L(arbitrage, db, "Reads/Writes", "JDBC")
Rel_R(arbitrage, consumer, "Sends e-mail with trading opportunity")

@enduml
